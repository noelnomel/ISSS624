[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS624",
    "section": "",
    "text": "Welcome to ISSS624 Geospatial Analytics Application!\nI will share with you my learning journey in Geospatial Analytics in this webpage :)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands_on_Ex01.html",
    "href": "Hands_on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "This is the overview paragraph."
  },
  {
    "objectID": "Hands_on_Ex01.html#overview",
    "href": "Hands_on_Ex01.html#overview",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "This is the overview paragraph."
  },
  {
    "objectID": "Hands_on_Ex01.html#getting-started",
    "href": "Hands_on_Ex01.html#getting-started",
    "title": "Hands-on Exercise 1",
    "section": "Getting Started",
    "text": "Getting Started\nThis is the getting started paragraph."
  },
  {
    "objectID": "Hands-on_Ex/chap01/data/geospatial/MPSZ-2019.html",
    "href": "Hands-on_Ex/chap01/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Hands-on_Ex/chap01/Hands_on_Ex01.html",
    "href": "Hands-on_Ex/chap01/Hands_on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "This is the overview paragraph."
  },
  {
    "objectID": "Hands-on_Ex/chap01/Hands_on_Ex01.html#overview",
    "href": "Hands-on_Ex/chap01/Hands_on_Ex01.html#overview",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "This is the overview paragraph."
  },
  {
    "objectID": "Hands-on_Ex/chap01/Hands_on_Ex01.html#getting-started",
    "href": "Hands-on_Ex/chap01/Hands_on_Ex01.html#getting-started",
    "title": "Hands-on Exercise 1",
    "section": "Getting Started",
    "text": "Getting Started\nThis is the getting started paragraph."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Ex/In-class_Ex01/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Hands_on_Ex/Hands_on_Ex01/Hands_on_Ex01.html",
    "href": "Hands_on_Ex/Hands_on_Ex01/Hands_on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "This is the first hands-on exercise for ISSS624 Applied Geospatial Analytics. The first step is creating this webpage, and the subsequent steps are in data wrangling and choropleth mapping."
  },
  {
    "objectID": "Hands_on_Ex/Hands_on_Ex01/Hands_on_Ex01.html#overview",
    "href": "Hands_on_Ex/Hands_on_Ex01/Hands_on_Ex01.html#overview",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "This is the first hands-on exercise for ISSS624 Applied Geospatial Analytics. The first step is creating this webpage, and the subsequent steps are in data wrangling and choropleth mapping."
  },
  {
    "objectID": "Hands_on_Ex/Hands_on_Ex01/Hands_on_Ex01.html#getting-started",
    "href": "Hands_on_Ex/Hands_on_Ex01/Hands_on_Ex01.html#getting-started",
    "title": "Hands-on Exercise 1",
    "section": "Getting Started",
    "text": "Getting Started\n\nWebpage Creation\nThis webpage is created on RStudio using the quarto package. The package is installed using the following steps:\n\nOn RStudio &gt; Tools &gt; Install Packages &gt; Type “quarto” in Packages field &gt; Install to R/R-4.3.2/library\n\n\n\nData Acquisition\nFor this Hands-on Exercise, the following data sets are assembled from the sources as indicated:\n\n\n\nS/N\nName of Data Set\nFile type\nSource\nExtracted to (file directory)\n\n\n\n\n1\nMaster Plan 2014 Subzone Boundary (Web)\nSHP\ndata.gov.sg\n/data/geospatial\n\n\n2\nPre-Schools Location\nKML\ndata.gov.sg\n/data/geospatial\n\n\n3\nCycling Path\nSHP\nLTA DataMall\n/data/geospatial\n\n\n4\nSingapore Listings\nCSV\nInside Airbnb\n/data/aspatial"
  },
  {
    "objectID": "In_class_Ex/In-class_Ex01/data/geospatial/MPSZ-2019.html",
    "href": "In_class_Ex/In-class_Ex01/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In_class_Ex/In-class_Ex01/In_class_Ex01.html#data-import",
    "href": "In_class_Ex/In-class_Ex01/In_class_Ex01.html#data-import",
    "title": "In-Class Exercise 1",
    "section": "Data Import",
    "text": "Data Import"
  },
  {
    "objectID": "In_class_Ex/In-class_Ex01/In_class_Ex01.html",
    "href": "In_class_Ex/In-class_Ex01/In_class_Ex01.html",
    "title": "In-Class Exercise 1",
    "section": "",
    "text": "This is the code chunk to load the following packages and purposes:\n\ntmap: thematic mapping\nsf: geospatial data handling\ntidyverse: non-spatial data handling\n\n\npacman::p_load(tmap, sf, tidyverse)"
  },
  {
    "objectID": "In_class_Ex/In-class_Ex01/In_class_Ex01.html#getting-started",
    "href": "In_class_Ex/In-class_Ex01/In_class_Ex01.html#getting-started",
    "title": "In-Class Exercise 1",
    "section": "",
    "text": "This is the code chunk to load the following packages and purposes:\n\ntmap: thematic mapping\nsf: geospatial data handling\ntidyverse: non-spatial data handling\n\n\npacman::p_load(tmap, sf, tidyverse)"
  },
  {
    "objectID": "In_class_Ex/In-class_Ex01/In_class_Ex01.html#preparing-data-flow",
    "href": "In_class_Ex/In-class_Ex01/In_class_Ex01.html#preparing-data-flow",
    "title": "In-Class Exercise 1",
    "section": "Preparing Data Flow",
    "text": "Preparing Data Flow\n\nImporting the OD Data\nFirstly, we will import the dataset Passenger Volume by Origin Destination Bus Stops downloaded from LTA DataMall by using read_csv() of readr package.\n\nodbus &lt;- read.csv(\"data/aspatial/origin_destination_bus_202308.csv\")\n\nA quick check of the odbus tibble data frame shows that the values in ORIGIN_PT_CODE and DESTINATION_PT_CODE are in numeric data type.\n\nodbus$ORIGIN_PT_CODE &lt;-\n  as.factor(odbus$ORIGIN_PT_CODE) \nodbus$DESTINATION_PT_CODE &lt;-\n  as.factor(odbus$DESTINATION_PT_CODE)\n\nFinding the number of trips taken between 7 and 10 am on weekdays.\n\norigtrip_7_9 &lt;- odbus %&gt;%\n  filter(DAY_TYPE=='WEEKDAY') %&gt;%\n  filter(TIME_PER_HOUR &gt;= 7 &\n          TIME_PER_HOUR &lt;= 9) %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n\nbusstop &lt;- st_read(dsn=\"data/geospatial\",\n                   layer = \"BusStop\") %&gt;%\n  st_transform(crs=3414)\n\nReading layer `BusStop' from data source \n  `C:\\Users\\noel1\\Documents\\School\\02. Special Sem 1\\ISSS624 Geospatial Analysis\\noelnomel\\ISSS624\\In_class_Ex\\In-class_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\n\nmpsz &lt;- st_read(dsn=\"data/geospatial\",\n                   layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs=3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\noel1\\Documents\\School\\02. Special Sem 1\\ISSS624 Geospatial Analysis\\noelnomel\\ISSS624\\In_class_Ex\\In-class_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\nmpsz\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((33222.98 29...\n2        CR MULTIPOLYGON (((28481.45 30...\n3        CR MULTIPOLYGON (((28087.34 30...\n4        WR MULTIPOLYGON (((14557.7 304...\n5        CR MULTIPOLYGON (((29542.53 31...\n6        CR MULTIPOLYGON (((35279.55 30...\n7        WR MULTIPOLYGON (((15772.59 21...\n8        WR MULTIPOLYGON (((19843.41 21...\n9        CR MULTIPOLYGON (((30870.53 22...\n10       CR MULTIPOLYGON (((26879.04 26..."
  },
  {
    "objectID": "Hands_on_Ex/Hands_on_Ex01/Hands_on_Ex01.html#geospatial-data-wrangling",
    "href": "Hands_on_Ex/Hands_on_Ex01/Hands_on_Ex01.html#geospatial-data-wrangling",
    "title": "Hands-on Exercise 1",
    "section": "Geospatial Data Wrangling",
    "text": "Geospatial Data Wrangling\nIn this Hands-on Exercise, the following R packages will be used:\n\nsf for importing, managing, and processing geospatial data;\ntidyverse to perform data science tasks such as importing, wrangling, and visualising data.\n\nWe will import the packages using the following code:\n\npacman::p_load(sf,tidyverse)\n\n\nImporting Geospatial Data\nWe will use the st_read() function from the sf package to import the following Geospatial data:\n\n\n\n\n\n\n\n\n\nS/N\nName of Data Set\nFormat\nLayer\n\n\n\n\n1\nMaster Plan 2014 Subzone Boundary (Web)\nSHP\nPolygon feature layer\n\n\n2\nPre-Schools Location\nSHP\nLine feature layer\n\n\n3\nCycling Path\nKML\nPoint feature layer\n\n\n\n\nImport Polygon Feature Data\nUsing the code below, we will import MP14_SUBZONE_WEB_PL shapefile into R as a polygon feature data frame. As the input geospatial data is in shapefile format, two arguments will be used:\n\ndsn to define the data path\nlayer to provide the shapefile name\n\n\nmpsz = st_read(dsn = \"data/geospatial\",\n               layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\noel1\\Documents\\School\\02. Special Sem 1\\ISSS624 Geospatial Analysis\\noelnomel\\ISSS624\\Hands_on_Ex\\Hands_on_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nAs the dataset is in SHP format, the file extensions (.shp, .dbf, .prj, and .sbn) need not be included.\n\nRunning the code shows that there are 323 multipolygon features and 15 fields in the mpsz simple feature data frame. The mpsz data frame is using the SVY21 projected coordinates system.\n\n\nImport Line Feature Data\nSimilarly, we will use the following code with the same arguments to import CyclingPath shapefile into R as a line feature data frame.\n\ncyclingpath = st_read(dsn = \"data/geospatial\",\n               layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\Users\\noel1\\Documents\\School\\02. Special Sem 1\\ISSS624 Geospatial Analysis\\noelnomel\\ISSS624\\Hands_on_Ex\\Hands_on_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2558 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\n\nRunning the code shows that there are 2558 linestring features and 2 fields in the cyclingpath linestring feature data frame, which is also using the SVY21 projected coordinates system.\n\n\nImport Point Feature Data\nThe following code is used to import the PreSchoolsLocation file. As the data is in KML format, the full filepath has to be provided:\n\npreschools = st_read(dsn = \"data/geospatial/PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\Users\\noel1\\Documents\\School\\02. Special Sem 1\\ISSS624 Geospatial Analysis\\noelnomel\\ISSS624\\Hands_on_Ex\\Hands_on_Ex01\\data\\geospatial\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nAs the full filepath is defined, we need not indicate the layer to be imported in the code.\n\nRunning the code shows that there are 2290 point features and 2 fields in the preschools point feature data frame. The preschools data frame is using the WGS84 coordinates system.\n\n\n\nChecking the Contents of a Simple Feature data frame\nThere are different ways to have a quick view of the contents of a simple feature data frame. In this section, we will explore the following methods:\n\nst_geometry()\nglimpse()\nhead()\n\n\nUsing st_geometry()\nst_geometry returns an object of class sfc, a list-column with geometries.\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nRunning the code above shows minimal information about the feature, such as the geometry type, bounding box, and the coordinate system of the data. The first 5 geometries are also displayed.\n\n\nUsing glimpse()\nUsing glimpse() allows us to see all columns of the data (but displayed in rows) and the type of data stored in field. The values in each column are also displayed following each column header.\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\nRunning the code above shows that FMEL_UPD_D is in date data type, while X_ADDR, Y_ADDR, SHAPE_Leng, and SHAPE_Area are in double-precision values.\n\n\nUsing head()\nUsing head() shows the first n records to display for each field, while also displaying information regarding the geometric features.\n\nhead(mpsz, n=5)\n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n\n\nRunning the code above displayed information on the geometric features and the first 5 records in the data set.\n\n\n\nPlotting the Geospatial Data\nWe will use the plot() function to visualise the geospatial features.\n\nplot(mpsz)\n\n\n\n\n\nThe default plot of an sf object is a multi-plot of all attributes, up to a reasonable maximum.\n\nWe can choose to plot only the geometry as shown below:\n\nplot(st_geometry(mpsz))\n\n\n\n\nWe can also choose to plot the sf object using a specific attribute:\n\nplot(mpsz[\"PLN_AREA_N\"])\n\n\n\n\n\n\nProjection Transformation\nIn order to perform geoprocessing using two different geospatial data sets, both data sets should be projected using similar coordinate systems.\nWe will conduct projection transformation to project a simple feature data frame from one coordinate system to another.\n\nAssigning EPSG Code to Simple Feature Data Frame\nOne common issue that happens when geospatial data is imported into R is that the coordinate system of the source data is wrongly assigned during import.\nFor example, examining the mpsz simple feature data frame using st_crs() shows that:\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nThe mpsz data frame is projected to SVY21 but the code above reveals that EPSG is 9001 when the correct EPSG code for SVY21 is 3414.\nWe will use st_set_crs() from the sf package to assign EPSG code 3414 to the mpsz data frame.\n\nmpsz3414 &lt;- st_set_crs(mpsz,3414)\n\nNow to confirm that mpsz3414 is assigned the correct EPSG code, we will run the following code, which shows the EPSG code as 3414.\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\nTransform Projection of preschools from WGS84 to SVY21\nAs geographic coordinate system is not appropriate for use with analysis that requires distance and/or area measurements, it may be necessary to transform such data to projected coordinate system.\nFor example, the preschools simple feature data frame is using WGS84 geographic coordinate system.\n\nst_geometry(preschools)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\nWe will have to reproject preschools from the existing system to SVY21 mathematically, which can be achieved through st_transform(). st_set_crs() only replaces the crs and does not reproject the data.\n\npreschools3414 &lt;- st_transform(preschools,crs=3414)\n\nNow to confirm that preschools3414 is using the SVY21 system, we will run the following code:\n\nst_geometry(preschools3414)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11810.03 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:\n\n\nIt can be observed that preschools3414 is now using SVY21. Furthermore, it can be observed that the values in Bounding box are greater than the decimal degree range of 0 to 360 commonly used by many geographic coordinate systems.\n\n\n\nImporting and Converting Aspatial Data\n\nImporting Aspatial Data\nThe listings.csv file downloaded from Inside Airbnb is a aspatial dataset as it does not contain geospatial data but it has fields that capture the x- and y-coordinates of the data points.\nWe will import the CSV file into R, save it as a tibble data frame, before converting it to a simple feature data frame.\n\nlistings &lt;- read_csv(\"data/aspatial/listings.csv\")\n\nWe will use the following code to examine if the data file was imported correctly:\n\nlist(listings)\n\n[[1]]\n# A tibble: 3,483 × 75\n       id listing_url            scrape_id last_scraped source name  description\n    &lt;dbl&gt; &lt;chr&gt;                      &lt;dbl&gt; &lt;date&gt;       &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;      \n 1  71609 https://www.airbnb.co…   2.02e13 2023-09-23   previ… Vill… For 3 room…\n 2  71896 https://www.airbnb.co…   2.02e13 2023-09-23   previ… Home… &lt;b&gt;The spa…\n 3  71903 https://www.airbnb.co…   2.02e13 2023-09-23   previ… Home… Like your …\n 4 275343 https://www.airbnb.co…   2.02e13 2023-09-23   city … Rent… **IMPORTAN…\n 5 275344 https://www.airbnb.co…   2.02e13 2023-09-23   city … Rent… Lovely hom…\n 6 289234 https://www.airbnb.co…   2.02e13 2023-09-23   previ… Home… This whole…\n 7 294281 https://www.airbnb.co…   2.02e13 2023-09-23   city … Rent… I have 3 b…\n 8 324945 https://www.airbnb.co…   2.02e13 2023-09-23   city … Rent… **IMPORTAN…\n 9 330095 https://www.airbnb.co…   2.02e13 2023-09-23   city … Rent… **IMPORTAN…\n10 369141 https://www.airbnb.co…   2.02e13 2023-09-23   city … Plac… A room in …\n# ℹ 3,473 more rows\n# ℹ 68 more variables: neighborhood_overview &lt;chr&gt;, picture_url &lt;chr&gt;,\n#   host_id &lt;dbl&gt;, host_url &lt;chr&gt;, host_name &lt;chr&gt;, host_since &lt;date&gt;,\n#   host_location &lt;chr&gt;, host_about &lt;chr&gt;, host_response_time &lt;chr&gt;,\n#   host_response_rate &lt;chr&gt;, host_acceptance_rate &lt;chr&gt;,\n#   host_is_superhost &lt;lgl&gt;, host_thumbnail_url &lt;chr&gt;, host_picture_url &lt;chr&gt;,\n#   host_neighbourhood &lt;chr&gt;, host_listings_count &lt;dbl&gt;, …\n\n\nThe output shows that the listings tibble data frame consists of 3,483 records and 75 columns. The latitude and longitude fields will be used for the next step. It is observed that both fields are in decimal degree format; we could guess that the data is using WGS84 geographic coordinate system.\n\n\nConverting Aspatial Data\nWe will use the st_as_sf() function from the sf package to convert listings tibble data into a simple feature data frame.\n\nlistings_sf &lt;- st_as_sf(listings, \n                        coords = c(\"longitude\",\"latitude\"),\n                        crs=4326) %&gt;%\n  st_transform(crs=3414)\n\n\nthe coords argument takes x-coordinates followed by y-coordinates\nEPSG 4326 refers to the WSG84 geographic coordinate system\n%&gt;% is used to nest st_transform() to reproject the newly created simple feature data frame into SVY21 projected coordinate system.\n\n\nglimpse(listings_sf)\n\nRows: 3,483\nColumns: 74\n$ id                                           &lt;dbl&gt; 71609, 71896, 71903, 2753…\n$ listing_url                                  &lt;chr&gt; \"https://www.airbnb.com/r…\n$ scrape_id                                    &lt;dbl&gt; 2.023092e+13, 2.023092e+1…\n$ last_scraped                                 &lt;date&gt; 2023-09-23, 2023-09-23, …\n$ source                                       &lt;chr&gt; \"previous scrape\", \"previ…\n$ name                                         &lt;chr&gt; \"Villa in Singapore · ★4.…\n$ description                                  &lt;chr&gt; \"For 3 rooms.Book room 1&…\n$ neighborhood_overview                        &lt;chr&gt; NA, NA, \"Quiet and view o…\n$ picture_url                                  &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_id                                      &lt;dbl&gt; 367042, 367042, 367042, 1…\n$ host_url                                     &lt;chr&gt; \"https://www.airbnb.com/u…\n$ host_name                                    &lt;chr&gt; \"Belinda\", \"Belinda\", \"Be…\n$ host_since                                   &lt;date&gt; 2011-01-29, 2011-01-29, …\n$ host_location                                &lt;chr&gt; \"Singapore\", \"Singapore\",…\n$ host_about                                   &lt;chr&gt; \"Hi My name is Belinda -H…\n$ host_response_time                           &lt;chr&gt; \"within a few hours\", \"wi…\n$ host_response_rate                           &lt;chr&gt; \"100%\", \"100%\", \"100%\", \"…\n$ host_acceptance_rate                         &lt;chr&gt; \"100%\", \"100%\", \"100%\", \"…\n$ host_is_superhost                            &lt;lgl&gt; FALSE, FALSE, FALSE, FALS…\n$ host_thumbnail_url                           &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_picture_url                             &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_neighbourhood                           &lt;chr&gt; \"Tampines\", \"Tampines\", \"…\n$ host_listings_count                          &lt;dbl&gt; 5, 5, 5, 52, 52, 5, 7, 52…\n$ host_total_listings_count                    &lt;dbl&gt; 15, 15, 15, 65, 65, 15, 8…\n$ host_verifications                           &lt;chr&gt; \"['email', 'phone']\", \"['…\n$ host_has_profile_pic                         &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ host_identity_verified                       &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ neighbourhood                                &lt;chr&gt; NA, NA, \"Singapore, Singa…\n$ neighbourhood_cleansed                       &lt;chr&gt; \"Tampines\", \"Tampines\", \"…\n$ neighbourhood_group_cleansed                 &lt;chr&gt; \"East Region\", \"East Regi…\n$ property_type                                &lt;chr&gt; \"Private room in villa\", …\n$ room_type                                    &lt;chr&gt; \"Private room\", \"Private …\n$ accommodates                                 &lt;dbl&gt; 3, 1, 2, 1, 1, 4, 2, 1, 1…\n$ bathrooms                                    &lt;lgl&gt; NA, NA, NA, NA, NA, NA, N…\n$ bathrooms_text                               &lt;chr&gt; \"1 private bath\", \"Shared…\n$ bedrooms                                     &lt;dbl&gt; NA, NA, NA, NA, NA, 3, NA…\n$ beds                                         &lt;dbl&gt; 3, 1, 2, 1, 1, 5, 1, 1, 1…\n$ amenities                                    &lt;chr&gt; \"[\\\"Private backyard \\\\u2…\n$ price                                        &lt;chr&gt; \"$150.00\", \"$80.00\", \"$80…\n$ minimum_nights                               &lt;dbl&gt; 92, 92, 92, 60, 60, 92, 9…\n$ maximum_nights                               &lt;dbl&gt; 365, 365, 365, 999, 999, …\n$ minimum_minimum_nights                       &lt;dbl&gt; 92, 92, 92, 60, 60, 92, 9…\n$ maximum_minimum_nights                       &lt;dbl&gt; 92, 92, 92, 60, 60, 92, 9…\n$ minimum_maximum_nights                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ maximum_maximum_nights                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ minimum_nights_avg_ntm                       &lt;dbl&gt; 92, 92, 92, 60, 60, 92, 9…\n$ maximum_nights_avg_ntm                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ calendar_updated                             &lt;lgl&gt; NA, NA, NA, NA, NA, NA, N…\n$ has_availability                             &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ availability_30                              &lt;dbl&gt; 28, 28, 28, 1, 30, 28, 30…\n$ availability_60                              &lt;dbl&gt; 58, 58, 58, 1, 60, 58, 60…\n$ availability_90                              &lt;dbl&gt; 88, 88, 88, 1, 90, 88, 90…\n$ availability_365                             &lt;dbl&gt; 89, 89, 89, 275, 274, 89,…\n$ calendar_last_scraped                        &lt;date&gt; 2023-09-23, 2023-09-23, …\n$ number_of_reviews                            &lt;dbl&gt; 20, 24, 47, 22, 17, 12, 1…\n$ number_of_reviews_ltm                        &lt;dbl&gt; 0, 0, 0, 0, 3, 0, 0, 1, 3…\n$ number_of_reviews_l30d                       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 1…\n$ first_review                                 &lt;date&gt; 2011-12-19, 2011-07-30, …\n$ last_review                                  &lt;date&gt; 2020-01-17, 2019-10-13, …\n$ review_scores_rating                         &lt;dbl&gt; 4.44, 4.16, 4.41, 4.40, 4…\n$ review_scores_accuracy                       &lt;dbl&gt; 4.37, 4.22, 4.39, 4.16, 4…\n$ review_scores_cleanliness                    &lt;dbl&gt; 4.00, 4.09, 4.52, 4.26, 4…\n$ review_scores_checkin                        &lt;dbl&gt; 4.63, 4.43, 4.63, 4.47, 4…\n$ review_scores_communication                  &lt;dbl&gt; 4.78, 4.43, 4.64, 4.42, 4…\n$ review_scores_location                       &lt;dbl&gt; 4.26, 4.17, 4.50, 4.53, 4…\n$ review_scores_value                          &lt;dbl&gt; 4.32, 4.04, 4.36, 4.63, 4…\n$ license                                      &lt;chr&gt; NA, NA, NA, \"S0399\", \"S03…\n$ instant_bookable                             &lt;lgl&gt; FALSE, FALSE, FALSE, TRUE…\n$ calculated_host_listings_count               &lt;dbl&gt; 5, 5, 5, 52, 52, 5, 7, 52…\n$ calculated_host_listings_count_entire_homes  &lt;dbl&gt; 0, 0, 0, 1, 1, 0, 1, 1, 1…\n$ calculated_host_listings_count_private_rooms &lt;dbl&gt; 5, 5, 5, 51, 51, 5, 6, 51…\n$ calculated_host_listings_count_shared_rooms  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ reviews_per_month                            &lt;dbl&gt; 0.14, 0.16, 0.31, 0.17, 0…\n$ geometry                                     &lt;POINT [m]&gt; POINT (41972.5 3639…\n\n\nIt can be observed that a new column labelled geometry has been added while the longitude and latitude columns have been dropped from the listings_sf data frame.\n\n\n\nGeoprocessing with sf package\nIn addition to the functions explored above, the sf package also offers a wide range of geoprocessing functions, also called GIS analysis.\nWe will explore the use of buffering and point in polygon count in this section.\n\nBuffering\nScenario:\nThe authorities are planning to upgrade existing cycling paths and they need to acquire 5 metres of reserved land on both sides of existing cycling paths. You are tasked to determine the extent of land that needs to be acquired and its total area.\nWe will derive the solution using st_buffer() to compute the 5-metre buffer around the current cycling paths.\n\nbuffer_cycling &lt;- st_buffer(cyclingpath,dist=5, nQuadSegs = 30)\n\nWe will then calculate the area of the buffers using this code:\n\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\n\nTo derive the total area of land involved in this plan, we will use the sum() function:\n\nsum(buffer_cycling$AREA)\n\n1774367 [m^2]\n\n\n\n\nPoint-in-Polygon Count\nScenario:\nYou are tasked to find out the number of pre-schools in each Planning Subzone.\nThis can be achieved by combining the lengths() function and the st_intersects() function as shown in the code below. The st_instersects() function identifies pre-schools located in each Planning Subzone while the lengths() function counts the number of pre-schools that are found in each Planning Subzone.\n\nmpsz3414$'PreSchools_Count' &lt;- lengths(st_intersects(mpsz3414,preschools3414))\n\n\nst_intersection(): Returns a geometry representing the point-set intersection of two geometries. \nst_intersects(): Returns true if two geometries intersect (i.e. if they have any point in common).\n\nNext, we will check the summary statistics of the newly derived field using summary() as shown below:\n\nsummary(mpsz3414$\"PreSchools_Count\")\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n\n\nWe will use top_n() from the dplyr package to display the Planning Subzone with the highest number of pre-schools:\n\ntop_n(mpsz3414,1,PreSchools_Count)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSchools_Count\n1    4339824 MULTIPOLYGON (((42196.76 38...               72\n\n\n\n\nCalculate Density\nScenario:\nYou are tasked to determine the density of pre-schools by Planning Subzone.\nWe can do this by first deriving the area of each Planning Subzone using st_area() from the sf package.\n\nmpsz3414$Area &lt;- mpsz3414 %&gt;%\n  st_area()\n\nNext, we use the mutate() function from the dplyr package to compute the density:\n\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  mutate('PreSchools_Density' = PreSchools_Count/Area * 1000000)\n\nLastly, we can check that the fields are computed correctly by displaying the top 2 Planning Subzones with the highest pre-school density.\n\ntop_n(mpsz3414,2,PreSchools_Density)\n\nSimple feature collection with 2 features and 18 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 26864.99 ymin: 28623.75 xmax: 29976.93 ymax: 45653.61\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND    PLN_AREA_N PLN_AREA_C\n1       27          8         CECIL    DTSZ08      Y DOWNTOWN CORE         DT\n2      278          3 MANDAI ESTATE    MDSZ03      N        MANDAI         MD\n        REGION_N REGION_C          INC_CRC FMEL_UPD_D  X_ADDR   Y_ADDR\n1 CENTRAL REGION       CR 65AA82AF6F4D925D 2014-12-05 29730.2 29011.33\n2   NORTH REGION       NR F6266F7368DBB9AB 2014-12-05 27082.7 45367.46\n  SHAPE_Leng SHAPE_Area                       geometry PreSchools_Count\n1   2116.095   196619.9 MULTIPOLYGON (((29808.18 28...                7\n2   1633.708   143137.9 MULTIPOLYGON (((27119.56 45...                5\n            Area PreSchools_Density\n1 196619.9 [m^2]   35.60169 [1/m^2]\n2 143137.9 [m^2]   34.93134 [1/m^2]\n\n\n\n\n\nExploratory Data Analysis (EDA)\nWe will explore the use of ggplot2 functions to create functional statistical graphs from geospatial data for EDA purposes.\nFirstly, we will plot a histogram using the hist() function to reveal the distribution of PreSchools_Density:\n\nhist(mpsz3414$PreSchools_Density)\n\n\n\n\nUsing the hist() function is straightforward but it provides limited room for customisation of the plots. Next, we will explore using ggplot2 functions to plot a customisable histogram:\n\nggplot(data = mpsz3414,\n       aes(x = as.numeric(PreSchools_Density)))+\n  geom_histogram(bins = 20, color = \"black\", fill = \"lightblue\")+\n  labs(title = \"Are pre-schools evenly distributed in Singapore?\",\n       subtitle = \"There are many planning subzones with only one pre-school; \\non the other hand, there are two planning subzones with at least 20 pre-schools\",\n       x = 'Pre-school Density (per km sq)',\n       y = 'Frequency')\n\n\n\n\nNext, we will use ggplot2 functions to plot a scatterplot to show the relationship between PreSchools_Density and PreSchools_Count:\n\nggplot(data = mpsz3414,\n       aes(y = PreSchools_Count,\n           x = as.numeric(PreSchools_Density))) +\n  geom_point(color = \"black\", fill = \"lightblue\") +\n  xlim(0,40) +\n  ylim(0,40) +\n  labs(title = \"Is there a relationship between PreSchools_Density and PreSchools_Count?\",\n       x = 'Pre-school Density (per km sq)',\n       y = 'Pre-School Count')"
  }
]